{"version":3,"file":"static/js/899.6029d304.chunk.js","mappings":"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","sources":["API.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport noPhoto from './components/Images/backJPG.png';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'f142a78acdaeb700a5127e9c79c73889',\n  include_adults: false,\n};\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMAGE_BASE_URL + poster,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMAGE_BASE_URL + poster,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMAGE_BASE_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMAGE_BASE_URL + photo : noPhoto,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieList,\n  MovieItem,\n  MovieLink,\n  Img,\n  MovieTitle,\n} from '../../pages/Home/Home.styled';\n\nconst MovieListComponent = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovieList>\n      {movies.map(({ id, title, original_title, poster }) => (\n        <MovieItem key={id}>\n          <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n            <Img\n              src={poster}\n              alt={title}\n              onError={e => {\n                e.target.src = 'Something wrong. Reload the page';\n              }}\n            />\n            <MovieTitle>\n              <h3>{title || original_title}</h3>\n            </MovieTitle>\n          </MovieLink>\n        </MovieItem>\n      ))}\n    </MovieList>\n  );\n};\n\nexport default MovieListComponent;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const HomeContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n  }\n`;\n\nexport const HomeTitle = styled.h1`\n  font-weight: 700;\n  color: #3f51b5;\n  margin: 30px, 0;\n  text-decoration: none;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nexport const MovieTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: #3f51b5;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const FormDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Form = styled.form`\n    margin-top: 5px;\n    max-width: 600px;\n    display: flex;\n    jastyfy-contenr: center\n    max-width: 600px;;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n}`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    color: #3f51b550;\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  border: 0;\n  //   background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  color: #3f51b5;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nexport const MovieTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: #3f51b5;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchByQuery } from '../../API';\nimport { FormDiv, Form, Input, Button } from './Movies.styled';\nimport MoviesListComponent from '../../components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const location = useLocation();\n\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    searchQuery && fetchByQuery(searchQuery).then(setMovies);\n  }, [searchQuery]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const response = await fetchByQuery(query);\n    setMovies(response);\n    setSearchParams({ query });\n    setQuery('');\n  };\n\n  const onChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <>\n      <FormDiv>\n        <Form onSubmit={handleSubmit}>\n          <Input type=\"text\" value={query} onChange={onChange} />\n          <Button type=\"submit\">search</Button>\n        </Form>\n      </FormDiv>\n      {movies.length > 0 && (\n        <MoviesListComponent movies={movies} location={location} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","api_key","include_adults","IMAGE_BASE_URL","fetchTrending","then","data","results","map","id","title","poster","poster_path","catch","error","alert","massage","fetchByQuery","query","fetchMovieDetails","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","console","log","message","fetchMovieCredits","cast","name","character","photo","profile_path","noPhoto","fetchMovieReviews","author","content","movies","location","useLocation","original_title","to","state","from","src","alt","onError","e","target","HomeContainer","styled","HomeTitle","MovieList","MovieItem","MovieLink","Link","Img","MovieTitle","FormDiv","Form","Input","Button","useState","setQuery","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","handleSubmit","preventDefault","response","onSubmit","type","value","onChange","length","MoviesList"],"sourceRoot":""}