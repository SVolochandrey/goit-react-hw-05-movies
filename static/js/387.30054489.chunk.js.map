{"version":3,"file":"static/js/387.30054489.chunk.js","mappings":"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","sources":["API.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'f142a78acdaeb700a5127e9c79c73889',\n  include_adults: false,\n};\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path }) => ({\n        id,\n        title,\n        poster: poster_path,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: poster }) => ({\n        id,\n        name,\n        character,\n        poster,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\n","import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  display: flex;\n  padding: 30px;\n  background-color: #3f51b542;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  flex-direction: column;\n  align-items: center;\n`;\n","import { fetchMovieReviews } from '../../API';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ReviewsContainer } from './Reviews.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams('movieId');\n  const [reviews, setReviews] = useState([]);\n  const [onError, setOnError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchReviews = async () => {\n      try {\n        const data = await fetchMovieReviews(movieId);\n        setReviews(data);\n      } catch (error) {\n        setOnError(error);\n      }\n      finally {\n        setIsLoading(false)\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <ReviewsContainer>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>Ther is nothing found</p>\n      )}\n      {isLoading && <Loader/>}\n      {onError && <p>There is nothing found</p>}\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","api_key","include_adults","fetchTrending","then","data","results","map","id","title","poster","poster_path","catch","error","alert","massage","fetchByQuery","query","fetchMovieDetails","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","console","log","message","fetchMovieCredits","cast","name","character","profile_path","fetchMovieReviews","author","content","ReviewsContainer","styled","useParams","useState","reviews","setReviews","onError","setOnError","isLoading","setIsLoading","useEffect","fetchReviews","length","Loader"],"sourceRoot":""}