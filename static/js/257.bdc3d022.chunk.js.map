{"version":3,"file":"static/js/257.bdc3d022.chunk.js","mappings":"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","sources":["API.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'f142a78acdaeb700a5127e9c79c73889',\n  include_adults: false,\n};\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path }) => ({\n        id,\n        title,\n        poster: poster_path,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: poster }) => ({\n        id,\n        name,\n        character,\n        poster,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Btn = styled.button`\n  border: none;\n  background-color: transparent;\n  margin: 20px 0 0 35px;\n  padding: 0;\n  font-weight: 700;\n  cursor: pointer;\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  padding: 30px;\n  background-color: #3f51b542;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n`;\n\nexport const Img = styled.img`\n  width: 300px;\n`;\n\nexport const MovieInfo = styled.div`\n  padding-left: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-left: 0;\n`;\n\nexport const AddInfo = styled.h3`\n  margin-left: 35px;\n  margin-bottom: 0;\n`;\n\nexport const InfoList = styled.ul`\n  text-decoration: none;\n  margin-left: 0;\n  margin-top: 0;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  text-decoration: none;\n  font-weight: 600;\n  &.active {\n    color: #3f51b5;\n    font-weight: 700;\n    transform: scale(1.1);\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../API';\nimport Loader from 'components/Loader/Loader';\nimport {\n  Btn,\n  MovieContainer,\n  Img,\n  MovieInfo,\n  MovieTitle,\n  AddInfo,\n  InfoList,\n  InfoLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [onError, setOnError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const { poster, title, original_title, releaseYear, userScore, overview, genres } =\n    movie ?? {};\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchMovie = async () => {\n      try {\n        const fetchedMovie = await fetchMovieDetails(movieId);\n        setMovie(fetchedMovie);\n      } catch (error) {\n        setOnError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n\n  const backToMovies = () => {\n    navigate(backLinkHref);\n  };\n\n  return (\n    <div>\n      <Btn type=\"button\" onClick={backToMovies}>\n        Back to movies\n      </Btn>\n      {isLoading && <Loader />}\n      {onError && (\n        <p>We are sorry. Something went wrong. Please try again later</p>\n      )}\n      {movie && (\n        <div>\n          <MovieContainer>\n            <Img\n              src={\n                poster\n                  ? `https://image.tmdb.org/t/p/w200/${poster}`\n                  : 'https://naked-science.ru/wp-content/uploads/2016/04/article_face.jpg'\n              }\n              alt={title}\n            />\n            <MovieInfo>\n              <MovieTitle>\n                {title || original_title} ({releaseYear})\n              </MovieTitle>\n              <p>User Score: {userScore}%</p>\n              <h3>Overview</h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <p>{genres.map(({ name }) => name).join(' ')}</p>\n            </MovieInfo>\n          </MovieContainer>\n\n          <AddInfo>Additional information</AddInfo>\n\n          <InfoList>\n            <li>\n              <InfoLink to={'cast'} state={{ from: backLinkHref }}>\n                Cast\n              </InfoLink>\n            </li>\n            <li>\n              <InfoLink to={'reviews'} state={{ from: backLinkHref }}>\n                Reviews\n              </InfoLink>\n            </li>\n          </InfoList>\n          <Outlet />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","api_key","include_adults","fetchTrending","then","data","results","map","id","title","poster","poster_path","catch","error","alert","massage","fetchByQuery","query","fetchMovieDetails","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","console","log","message","fetchMovieCredits","cast","name","character","profile_path","fetchMovieReviews","author","content","Btn","styled","MovieContainer","Img","MovieInfo","MovieTitle","AddInfo","InfoList","InfoLink","NavLink","useState","movie","setMovie","onError","setOnError","isLoading","setIsLoading","useParams","location","useLocation","navigate","useNavigate","backLinkHref","state","from","original_title","useEffect","fetchMovie","fetchedMovie","type","onClick","Loader","src","alt","join","to"],"sourceRoot":""}