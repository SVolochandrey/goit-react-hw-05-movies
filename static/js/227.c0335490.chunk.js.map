{"version":3,"file":"static/js/227.c0335490.chunk.js","mappings":"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","sources":["API.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport noPhoto from './components/Images/backJPG.png';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'f142a78acdaeb700a5127e9c79c73889',\n  include_adults: false,\n};\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMAGE_BASE_URL + poster,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster: IMAGE_BASE_URL + poster,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster: IMAGE_BASE_URL + poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: photo }) => ({\n        id,\n        name,\n        character,\n        photo: photo ? IMAGE_BASE_URL + photo : noPhoto,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\n","import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\n  display: flex;\n  padding: 30px;\n  background-color: #3f51b542;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  flex-direction: column;\n  align-items: center;\n`;\n","import { fetchMovieReviews } from '../../API';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ReviewsContainer } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams('movieId');\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const data = await fetchMovieReviews(movieId);\n        setReviews(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <ReviewsContainer>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","api_key","include_adults","IMAGE_BASE_URL","fetchTrending","then","data","results","map","id","title","poster","poster_path","catch","error","alert","massage","fetchByQuery","query","fetchMovieDetails","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","console","log","message","fetchMovieCredits","cast","name","character","photo","profile_path","noPhoto","fetchMovieReviews","author","content","ReviewsContainer","styled","useParams","useState","reviews","setReviews","useEffect","fetchReviews","length"],"sourceRoot":""}