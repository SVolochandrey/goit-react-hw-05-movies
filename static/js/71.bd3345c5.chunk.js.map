{"version":3,"file":"static/js/71.bd3345c5.chunk.js","mappings":"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","sources":["API.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'f142a78acdaeb700a5127e9c79c73889',\n  include_adults: false,\n};\n\nexport const fetchTrending = async () => {\n  return axios\n    .get(`/trending/all/day?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path }) => ({\n        id,\n        title,\n        poster: poster_path,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchByQuery = async query => {\n  return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, title, poster_path: poster }) => ({\n        id,\n        title,\n        poster,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchMovieDetails = movieId => {\n  return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n      ({\n        data: {\n          id,\n          poster_path: poster,\n          title,\n          release_date: releaseYear,\n          vote_average: userScore,\n          overview,\n          genres,\n        },\n      }) => ({\n        id,\n        poster,\n        title,\n        releaseYear: new Date(releaseYear).getFullYear(),\n        userScore: Math.round(userScore * 10),\n        overview,\n        genres,\n      })\n    )\n    .catch(error => {\n      console.log(error.message);\n    });\n};\n\nexport const fetchMovieCredits = movieId => {\n  return axios\n    .get(`/movie/${movieId}/credits?`)\n    .then(({ data: { cast } }) =>\n      cast.map(({ id, name, character, profile_path: poster }) => ({\n        id,\n        name,\n        character,\n        poster,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\nexport const fetchMovieReviews = movieId => {\n  return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then(({ data: { results } }) =>\n      results.map(({ id, author, content }) => ({\n        id,\n        author,\n        content,\n      }))\n    )\n    .catch(error => {\n      alert(error.massage);\n    });\n};\n\n","import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 30px;\n  background-color: #3f51b542;\n  margin: 20px 30px 30px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n`;\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-top: 0;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding: 0;\n  transition-duration: 300ms;\n`;\n\nexport const CastItem = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  width: 100%;\n  max-width: 200px;\n  margin: 10px;\n  border-radius: 5px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  transition-duration: 300ms;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n`;\n\nexport const CastDescr = styled.div`\n  padding: 5px;\n  margin: 0px;\n  font-size: 10px;\n  color: #3f51b5;\n`;\n\nexport const CastName = styled.h3`\n  margin: 0px;\n`;\n\nexport const CastChar = styled.p`\n  margin: 0px;\n`;\n","import { fetchMovieCredits } from '../../API';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport noPhoto from '../Images/backJPG.png';\n\nimport {\n  CastContainer,\n  CastList,\n  CastItem,\n  Img,\n  CastDescr,\n  CastName,\n  CastChar,\n} from './Cast.styled';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams('movieId');\n  const [credits, setCredits] = useState(null);\n  const [onError, setOnError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchCredits = async () => {\n      try {\n        const data = await fetchMovieCredits(movieId);\n        if (data.length === 0) {\n          return alert('Ther is nothing found!!!');\n        }\n        setCredits(data);\n      } catch (error) {\n        setOnError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCredits();\n  }, [movieId]);\n\n  return (\n    <CastContainer>\n      {credits && (\n        <CastList>\n          {credits.map(({ id, name, character, poster }) => {\n            return (\n              <CastItem key={id}>\n                <Img\n                  src={\n                    poster\n                      ? `https://image.tmdb.org/t/p/w200/${poster}`\n                      : noPhoto\n                  }\n                  alt={name}\n                />\n                <CastDescr>\n                  <CastName>{name}</CastName>\n                  <CastChar>Character: {character}</CastChar>\n                </CastDescr>\n              </CastItem>\n            );\n          })}\n        </CastList>\n      )}\n      {isLoading && <Loader />}\n      {onError && <p>Something went wrong</p>}\n    </CastContainer>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","api_key","include_adults","fetchTrending","then","data","results","map","id","title","poster","poster_path","catch","error","alert","massage","fetchByQuery","query","fetchMovieDetails","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","console","log","message","fetchMovieCredits","cast","name","character","profile_path","fetchMovieReviews","author","content","CastContainer","styled","CastList","CastItem","Img","CastDescr","CastName","CastChar","useParams","useState","credits","setCredits","onError","setOnError","isLoading","setIsLoading","useEffect","fetchCredits","length","src","noPhoto","alt","Loader"],"sourceRoot":""}